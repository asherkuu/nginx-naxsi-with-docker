# server {
#     listen 80 default_server;
#     listen [::]:80 default_server;
#     server_name <DOMAIN> www.<DOMAIN>;

#     location / {
#         return 301 https://$host$request_uri;
#     }
# }

server {
    listen       80;
    server_name  localhost;

    # SSL
    # listen 443 ssl http2;
    # listen [::]:443 ssl http2;
    # server_name <DOMAIN> www.<DOMAIN>;

    # SSL certificates
    # ssl_certificate /etc/letsencrypt/live/<DOMAIN>/fullchain.pem;
    # ssl_certificate_key /etc/letsencrypt/live/<DOMAIN>/privkey.pem;
    # include /etc/letsencrypt/options-ssl-nginx.conf;
    # ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Security headers
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src *; object-src 'none'; frame-ancestors 'none'; base-uri 'self'; form-action 'self'" always;
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Permissions-Policy "geolocation=(self), microphone=()" always;
    add_header Expect-CT "max-age=86400, enforce" always;

    # WebSocket support
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";

    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_buffers 256 4k;
        proxy_buffer_size 32k;
        proxy_busy_buffers_size 64k;
        proxy_temp_file_write_size 256k;
        proxy_connect_timeout 30s;
        proxy_read_timeout 300s;
        proxy_send_timeout 180s;

        #################################################
        # NAXSI enabled
        #################################################
        include /etc/nginx/naxsi.rules;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    location /RequestDenied {
        return 403 "Request Denied by NAXSI.";
    }
}